bcplot = boxcox(mod1, lambda = seq(-2, 2, by = 0.01))
bcplot$x[which.max(bcplot$y)]
mod2 = lm(V7 ~ log(V6), data = a2)
summary(mod2)
par(mfrow = c(1,2))
plot(mod1, which = 1, main = "Before Transformation")
plot(mod2, which = 1, main = "After Transformation")
par(mfrow = c(1,2))
plot(mod1, which = 2, main = "Before Transformation")
plot(mod2, which = 2, main = "After Transformation")
par(mfrow = c(1,2))
plot(mod1, which = 3, main = "Before Transformation")
plot(mod2, which = 3, main = "After Transformation")
a2 = read.table("/Users/ziqinzhu/Desktop/18\ Fall/STA302/A2/A2 no outliers.txt", sep = ",")
mod1 = lm(V7 ~ V6, data = a2)
par(mfrow = c(1,3))
plot(a2$V6, a2$V7,
main = "Peak Membership vs Population",
ylab = "Peak Membership", xlab = "Population",
pch = 21, frame = FALSE)
abline(mod1,col="red",lty=2)
plot(mod1, which = 1)
plot(mod1, which = 3)
bcplot = boxcox(mod1, lambda = seq(-2, 2, by = 0.01))
bcplot$x[which.max(bcplot$y)]
mod2 = lm(V7**2 ~ log(V6), data = a2)
summary(mod2)
par(mfrow = c(1,2))
plot(mod1, which = 1, main = "Before Transformation")
plot(mod2, which = 1, main = "After Transformation")
par(mfrow = c(1,2))
plot(mod1, which = 2, main = "Before Transformation")
plot(mod2, which = 2, main = "After Transformation")
par(mfrow = c(1,2))
plot(mod1, which = 3, main = "Before Transformation")
plot(mod2, which = 3, main = "After Transformation")
a2 = read.table("/Users/ziqinzhu/Desktop/18\ Fall/STA302/A2/A2 no outliers.txt", sep = ",")
mod1 = lm(V7 ~ V6, data = a2)
plot(a2$V6, a2$V7,
main = "Peak Membership vs Population",
ylab = "Peak Membership", xlab = "Population",
pch = 21, frame = FALSE)
abline(mod1,col="red",lty=2)
plot(mod1, which = 1)
plot(mod1, which = 3)
bcplot = boxcox(mod1, lambda = seq(-2, 2, by = 0.01))
bcplot$x[which.max(bcplot$y)]
mod2 = lm(V7**2 ~ log(V6), data = a2)
summary(mod2)
par(mfrow = c(1,2))
plot(mod1, which = 1, main = "Before Transformation")
plot(mod2, which = 1, main = "After Transformation")
par(mfrow = c(1,2))
plot(mod1, which = 2, main = "Before Transformation")
plot(mod2, which = 2, main = "After Transformation")
par(mfrow = c(1,2))
plot(mod1, which = 3, main = "Before Transformation")
plot(mod2, which = 3, main = "After Transformation")
a2 = read.table("/Users/ziqinzhu/Desktop/18\ Fall/STA302/A2/A2 no outliers.txt", sep = ",")
mod1 = lm(V7 ~ V6, data = a2)
plot(a2$V6, a2$V7,
main = "Peak Membership vs Population",
ylab = "Peak Membership", xlab = "Population",
pch = 21, frame = FALSE)
abline(mod1,col="red",lty=2)
plot(mod1, which = 1)
plot(mod1, which = 3)
bcplot = boxcox(mod1, lambda = seq(-2, 2, by = 0.01))
bcplot$x[which.max(bcplot$y)]
mod2 = lm(1/V7 ~ log(V6), data = a2)
summary(mod2)
par(mfrow = c(1,2))
plot(mod1, which = 1, main = "Before Transformation")
plot(mod2, which = 1, main = "After Transformation")
par(mfrow = c(1,2))
plot(mod1, which = 2, main = "Before Transformation")
plot(mod2, which = 2, main = "After Transformation")
par(mfrow = c(1,2))
plot(mod1, which = 3, main = "Before Transformation")
plot(mod2, which = 3, main = "After Transformation")
a2 = read.table("/Users/ziqinzhu/Desktop/18\ Fall/STA302/A2/A2 no outliers.txt", sep = ",")
mod1 = lm(V7 ~ V6, data = a2)
plot(a2$V6, a2$V7,
main = "Peak Membership vs Population",
ylab = "Peak Membership", xlab = "Population",
pch = 21, frame = FALSE)
abline(mod1,col="red",lty=2)
plot(mod1, which = 1)
plot(mod1, which = 3)
bcplot = boxcox(mod1, lambda = seq(-2, 2, by = 0.01))
bcplot$x[which.max(bcplot$y)]
mod2 = lm(1/V7 ~ 1/V6), data = a2)
a2 = read.table("/Users/ziqinzhu/Desktop/18\ Fall/STA302/A2/A2 no outliers.txt", sep = ",")
mod1 = lm(V7 ~ V6, data = a2)
plot(a2$V6, a2$V7,
main = "Peak Membership vs Population",
ylab = "Peak Membership", xlab = "Population",
pch = 21, frame = FALSE)
abline(mod1,col="red",lty=2)
plot(mod1, which = 1)
plot(mod1, which = 3)
bcplot = boxcox(mod1, lambda = seq(-2, 2, by = 0.01))
bcplot$x[which.max(bcplot$y)]
mod2 = lm(1/V7 ~ 1/V6, data = a2)
summary(mod2)
par(mfrow = c(1,2))
plot(mod1, which = 1, main = "Before Transformation")
plot(mod2, which = 1, main = "After Transformation")
par(mfrow = c(1,2))
plot(mod1, which = 2, main = "Before Transformation")
plot(mod2, which = 2, main = "After Transformation")
par(mfrow = c(1,2))
plot(mod1, which = 3, main = "Before Transformation")
plot(mod2, which = 3, main = "After Transformation")
a2 = read.table("/Users/ziqinzhu/Desktop/18\ Fall/STA302/A2/A2 no outliers.txt", sep = ",")
mod1 = lm(V7 ~ V6, data = a2)
plot(a2$V6, a2$V7,
main = "Peak Membership vs Population",
ylab = "Peak Membership", xlab = "Population",
pch = 21, frame = FALSE)
abline(mod1,col="red",lty=2)
plot(mod1, which = 1)
plot(mod1, which = 3)
bcplot = boxcox(mod1, lambda = seq(-2, 2, by = 0.01))
bcplot$x[which.max(bcplot$y)]
mod2 = lm(1/V7 ~ log(V6), data = a2)
summary(mod2)
par(mfrow = c(1,2))
plot(mod1, which = 1, main = "Before Transformation")
plot(mod2, which = 1, main = "After Transformation")
par(mfrow = c(1,2))
plot(mod1, which = 2, main = "Before Transformation")
plot(mod2, which = 2, main = "After Transformation")
par(mfrow = c(1,2))
plot(mod1, which = 3, main = "Before Transformation")
plot(mod2, which = 3, main = "After Transformation")
a2 = read.table("/Users/ziqinzhu/Desktop/18\ Fall/STA302/A2/A2 no outliers.txt", sep = ",")
mod1 = lm(V7 ~ V6, data = a2)
plot(a2$V6, a2$V7,
main = "Peak Membership vs Population",
ylab = "Peak Membership", xlab = "Population",
pch = 21, frame = FALSE)
abline(mod1,col="red",lty=2)
plot(mod1, which = 1)
plot(mod1, which = 3)
bcplot = boxcox(mod1, lambda = seq(-2, 2, by = 0.01))
bcplot$x[which.max(bcplot$y)]
mod2 = lm(1/V7 ~ V6, data = a2)
summary(mod2)
par(mfrow = c(1,2))
plot(mod1, which = 1, main = "Before Transformation")
plot(mod2, which = 1, main = "After Transformation")
par(mfrow = c(1,2))
plot(mod1, which = 2, main = "Before Transformation")
plot(mod2, which = 2, main = "After Transformation")
par(mfrow = c(1,2))
plot(mod1, which = 3, main = "Before Transformation")
plot(mod2, which = 3, main = "After Transformation")
a2 = read.table("/Users/ziqinzhu/Desktop/18\ Fall/STA302/A2/A2 no outliers.txt", sep = ",")
mod1 = lm(V7 ~ V6, data = a2)
plot(a2$V6, a2$V7,
main = "Peak Membership vs Population",
ylab = "Peak Membership", xlab = "Population",
pch = 21, frame = FALSE)
abline(mod1,col="red",lty=2)
plot(mod1, which = 1)
plot(mod1, which = 3)
bcplot = boxcox(mod1, lambda = seq(-2, 2, by = 0.01))
bcplot$x[which.max(bcplot$y)]
mod2 = lm(1/V7 ~ log(V6), data = a2)
summary(mod2)
par(mfrow = c(1,2))
plot(mod1, which = 1, main = "Before Transformation")
plot(mod2, which = 1, main = "After Transformation")
par(mfrow = c(1,2))
plot(mod1, which = 2, main = "Before Transformation")
plot(mod2, which = 2, main = "After Transformation")
par(mfrow = c(1,2))
plot(mod1, which = 3, main = "Before Transformation")
plot(mod2, which = 3, main = "After Transformation")
#load data
slr = read.csv("file.txt", sep = "'")
X = seq(1,4)
H = X%*%solve(t(X)%*%X)%*%t(X)
V = 2 * solve(t(X)%*%X)
X = seq(1,4)
H = X%*%solve(t(X)%*%X)%*%t(X)
V = 2 * solve(t(X)%*%X)
print(V)
a2 = read.table("/Users/ziqinzhu/Desktop/18\ Fall/STA302/A2/A2 no outliers.txt", sep = ",")
mod1 = lm(V7 ~ V6, data = a2)
plot(a2$V6, a2$V7,
main = "Peak Membership vs Population",
ylab = "Peak Membership", xlab = "Population",
pch = 21, frame = FALSE)
abline(mod1,col="red",lty=2)
par(mfrow = c(1,2))
plot(mod1, which = 1)
plot(mod1, which = 3)
bcplot = boxcox(mod1, lambda = seq(-2, 2, by = 0.01))
bcplot$x[which.max(bcplot$y)]
mod2 = lm(1/V7 ~ log(V6), data = a2)
summary(mod2)
par(mfrow = c(1,2))
plot(mod1, which = 1, main = "Before Transformation")
plot(mod2, which = 1, main = "After Transformation")
par(mfrow = c(1,2))
plot(mod1, which = 2, main = "Before Transformation")
plot(mod2, which = 2, main = "After Transformation")
par(mfrow = c(1,2))
plot(mod1, which = 3, main = "Before Transformation")
plot(mod2, which = 3, main = "After Transformation")
mod2 = lm(V7**2 ~ log(V6), data = a2)
summary(mod2)
a2 = read.table("/Users/ziqinzhu/Desktop/18\ Fall/STA302/A2/A2 no outliers.txt", sep = ",")
mod1 = lm(V7 ~ V6, data = a2)
plot(a2$V6, a2$V7,
main = "Peak Membership vs Population",
ylab = "Peak Membership", xlab = "Population",
pch = 21, frame = FALSE)
abline(mod1,col="red",lty=2)
par(mfrow = c(1,2))
plot(mod1, which = 1)
plot(mod1, which = 3)
bcplot = boxcox(mod1, lambda = seq(-2, 2, by = 0.01))
bcplot$x[which.max(bcplot$y)]
mod2 = lm(V7 ~ log(V6), data = a2)
summary(mod2)
par(mfrow = c(1,2))
plot(mod1, which = 1, main = "Before Transformation")
plot(mod2, which = 1, main = "After Transformation")
par(mfrow = c(1,2))
plot(mod1, which = 2, main = "Before Transformation")
plot(mod2, which = 2, main = "After Transformation")
par(mfrow = c(1,2))
plot(mod1, which = 3, main = "Before Transformation")
plot(mod2, which = 3, main = "After Transformation")
a2 = read.table("/Users/ziqinzhu/Desktop/18\ Fall/STA302/A2/A2 no outliers.txt", sep = ",")
mod1 = lm(V7 ~ V6, data = a2)
plot(a2$V6, a2$V7,
main = "Peak Membership vs Population",
ylab = "Peak Membership", xlab = "Population",
pch = 21, frame = FALSE)
abline(mod1,col="red",lty=2)
par(mfrow = c(1,2))
plot(mod1, which = 1)
plot(mod1, which = 3)
bcplot = boxcox(mod1, lambda = seq(-2, 2, by = 0.01))
bcplot$x[which.max(bcplot$y)]
mod2 = lm(V7**2 ~ log(V6), data = a2)
summary(mod2)
par(mfrow = c(1,2))
plot(mod1, which = 1, main = "Before Transformation")
plot(mod2, which = 1, main = "After Transformation")
par(mfrow = c(1,2))
plot(mod1, which = 2, main = "Before Transformation")
plot(mod2, which = 2, main = "After Transformation")
par(mfrow = c(1,2))
plot(mod1, which = 3, main = "Before Transformation")
plot(mod2, which = 3, main = "After Transformation")
a2 = read.table("/Users/ziqinzhu/Desktop/18\ Fall/STA302/A2/A2 no outliers.txt", sep = ",")
mod1 = lm(V7 ~ V6, data = a2)
mod2 = lm(V7**2 ~ log(V6), data = a2)
t.test(mean(V7**2), mean(V7))
a2 = read.table("/Users/ziqinzhu/Desktop/18\ Fall/STA302/A2/A2 no outliers.txt", sep = ",")
mod1 = lm(V7 ~ V6, data = a2)
mod2 = lm(V7**2 ~ log(V6), data = a2)
t.test(mean(a2$V7**2), mean(a2$V7))
res = residuals(mod2)
res = residuals(mod2)
pred = predict(mod2)
shapiro.test(res)
View(V)
setwd("~/Desktop/BCS/R_Analysis/01_Demo")
library(tidyverse)
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE) #add columns to original data frame
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
demo_table2 <- fromJSON(txt='demo.json')
library(jsonlite）
library(jsonlite)
demo_table2 <- fromJSON(txt='demo.json')
View(H)
View(demo_table2)
View(demo_table)
View(a2)
View(a2)
demo_table[3,"Year"]
filter_table2 <- subset(demo_table2, price > 10000 & drive == "4wd" & "clean" %in% title_status) #filter by price and drivetrain
View(filter_table2)
filter_table3 <- demo_table2[("clean" %in% demo_table2$title_status) & (demo_table2$price > 10000) & (demo_table2$drive == "4wd"),]
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
num_rows <- 1:nrow(demo_table)
sample_rows <- sample(num_rows, 3)
demo_table[sample(1:nrow(demo_table), 3),]
demo_table[sample(1:nrow(demo_table), 3),]
demo_table[sample(1:nrow(demo_table), 3),]
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE) #add columns to original data frame
View(demo_table)
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer), .groups = 'keep') #create summary table
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer),Maximum_Price=max(price),Num_Vehicles=n(), .groups = 'keep') #create summary table with multiple columns
View(summarize_demo)
View(summarize_demo)
demo_table3 <- read.csv('demo2.csv',check.names = F,stringsAsFactors = F)
demo_table3 <- read.csv('demo2.csv',check.names = F,stringsAsFactors = F)
View(filter_table3)
View(filter_table3)
View(demo_table3)
View(demo_table3)
long_table <- gather(demo_table3,key="Metric",value="Score",buying_price:popularity)
View(long_table)
wide_table <- long_table %>% spread(key="Metric",value="Score")
View(wide_table)
View(wide_table)
View(long_table)
View(wide_table)
all.equal(demo_table3,wide_table)
demo_table3 <- read.csv('demo2.csv',check.names = F,stringsAsFactors = F)
wide_table <- long_table %>% spread(key="Metric",value="Score")
all.equal(demo_table3,wide_table)
demo_table3 <- demo_table3[,order(colnames(demo_table3))]
wide_table <- wide_table[,order(colnames(wide_table))]
all.equal(demo_table3,wide_table)
head(mpg)
plt <- ggplot(mpg,aes(x=class))
plt + geom_bar() #plot a bar plot
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary,aes(x=manufacturer,y=Vehicle_Count))
plt + geom_col() #plot a bar plot
View(summarize_demo)
View(mpg_summary)
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") #plot bar plot with labels
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") + #plot a boxplot with labels
>theme(axis.text.x=element_text(angle=45,hjust=1)) #rotate the x-axis label 45 degrees
theme(axis.text.x=element_text(angle=45,hjust=1)) #rotate the x-axis label 45 degrees
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") + theme(axis.text.x=element_text(angle=45,hjust=1))
mpg_summary <- subset(mpg,manufacturer=="toyota") %>% group_by(cyl) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary,aes(x=cyl,y=Mean_Hwy)) #import dataset into ggplot2
plt + geom_line()
plt + geom_line() + scale_x_discrete(limits=c(4,6,8)) + scale_y_continuous(breaks = c(15:30)) #add line plot with labels
plt <- ggplot(mpg,aes(x=displ,y=cty)) #import dataset into ggplot2
plt + geom_point() + xlab("Engine Size (L)") + ylab("City Fuel-Efficiency (MPG)") #add scatter plot with labels
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class)) #import dataset into ggplot2
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class") #add scatter plot with labels
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class,shape=drv)) #import dataset into ggplot2
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class",shape="Type of Drive") #add scatter plot with multiple aesthetics
plt <- ggplot(mpg,aes(y=hwy)) #import dataset into ggplot2
plt + geom_boxplot() #add boxplot
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy)) #import dataset into ggplot2
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot and rotate x-axis labels 45 degrees
mpg_summary <- mpg %>% group_by(class,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary, aes(x=class,y=factor(year),fill=Mean_Hwy))
plt + geom_tile() + labs(x="Vehicle Class",y="Vehicle Year",fill="Mean Highway (MPG)") #create heatmap with labels
mpg_summary <- mpg %>% group_by(model,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary, aes(x=model,y=factor(year),fill=Mean_Hwy)) #import dataset into ggplot2
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + #add heatmap with labels > theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5)) #rotate x-axis labels 90 degrees
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + #add heatmap with labels > theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5)) #rotate x-axis labels 90 degrees
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + #add heatmap with labels > theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5))
exit
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + #add heatmap with labels > theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5)) #rotate x-axis labels 90 degrees
exit
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + #add heatmap with labels
theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5)) #rotate x-axis labels 90 degrees
mpg_summary <- mpg %>% group_by(model,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary, aes(x=model,y=factor(year),fill=Mean_Hwy)) #import dataset into ggplot2
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + #add heatmap with labels
theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5)) #rotate x-axis labels 90 degrees
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy)) #import dataset into ggplot2
plt + geom_boxplot() + #add boxplot
theme(axis.text.x=element_text(angle=45,hjust=1)) +
geom_point()
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ), .groups = 'keep') #create summary table
> plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine)) #import dataset into ggplot2
> plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size") #add scatter plot
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine)) #import dataset into ggplot2
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size") #add scatter plot
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ),SD_Engine=sd(displ), .groups = 'keep')
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine)) #import dataset into ggplot2
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size") + #add scatter plot with labels
geom_errorbar(aes(ymin=Mean_Engine-SD_Engine,ymax=Mean_Engine+SD_Engine)) #overlay with error bars
mpg_long <- mpg %>% gather(key="MPG_Type",value="Rating",c(cty,hwy)) #convert to long format
head(mpg_long)
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type)) #import dataset into ggplot2
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot with labels rotated 45 degrees
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type)) #import dataset into ggplot2
plt + geom_boxplot() + facet_wrap(vars(MPG_Type)) + #create multiple boxplots, one for each MPG type
theme(axis.text.x=element_text(angle=45,hjust=1),legend.position = "none") + xlab("Manufacturer") #rotate x-axis labels
ggplot(mtcars,aes(x=wt)) + geom_density() #visualize distribution using density plot
shapiro.test(mtcars$wt)
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F) #import used car dataset
plt <- ggplot(population_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
plt + geom_density() #visualize distribution using density plot
sample_table <- population_table %>% sample_n(50) #randomly sample 50 data points
plt <- ggplot(sample_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
plt + geom_density() #visualize distribution using density plot
t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven))) #compare sample versus population means
sample_table <- population_table %>% sample_n(50) #generate 50 randomly sampled data points
sample_table2 <- population_table %>% sample_n(50) #generate another 50 randomly sampled data points
t.test(log10(sample_table$Miles_Driven),log10(sample_table2$Miles_Driven)) #compare means of two samples
mpg_data <- read.csv('mpg_modified.csv') #import dataset
mpg_data <- read.csv('mpg_modified.csv') #import dataset
mpg_1999 <- mpg_data %>% filter(year==1999) #select only data points where the year is 1999
mpg_2008 <- mpg_data %>% filter(year==2008) #select only data points where the year is 2008
t.test(mpg_1999$hwy,mpg_2008$hwy,paired = T) #compare the mean difference between two samples
mtcars_filt <- mtcars[,c("hp","cyl")] #filter columns from mtcars dataset
mtcars_filt$cyl <- factor(mtcars_filt$cyl) #convert numeric column to factor
aov(hp ~ cyl,data=mtcars_filt) #compare means across multiple levels
summary(aov(hp ~ cyl,data=mtcars_filt))
head(mtcars)
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
plt + geom_point() #create scatter plot
cor(mtcars$hp,mtcars$qsec) #calculate correlation coefficient
used_cars <- read.csv('used_car_data.csv',stringsAsFactors = F) #read in dataset
plt <- ggplot(used_cars,aes(x=Miles_Driven,y=Selling_Price)) #import dataset into ggplot2
plt + geom_point() #create a scatter plot
cor(used_cars$Miles_Driven,used_cars$Selling_Price) #calculate correlation coefficient
used_matrix <- as.matrix(used_cars[,c("Selling_Price","Present_Price","Miles_Driven")]) #convert data frame into numeric matrix
cor(used_matrix)
lm(qsec ~ hp,mtcars) #create linear model
summary(lm(qsec~hp,mtcars)) #summarize linear model
model <- lm(qsec ~ hp,mtcars) #create linear model
yvals <- model$coefficients['hp']*mtcars$hp +
model$coefficients['(Intercept)'] #determine y-axis values from linear model
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
plt + geom_point() + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars) #generate multiple linear regression model
summary(lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars)) #generate summary statistics
table(mpg$class,mpg$year) #generate contingency table
tbl <- table(mpg$class,mpg$year) #generate contingency table
hisq.test(tbl) #compare categorical distributions
chisq.test(tbl) #compare categorical distributions
setwd("~/Desktop/BCS/R_Analysis/Challenge")
？lm
?lm()
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = mpg_table))
library(tidyverse)
library(tidyverse)
mpg_table <- read.csv(file = "mechaCar_mpg.csv", check.names = F, stringsAsFactors = F)
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = mpg_table)
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = mpg_table))
setwd("~/Desktop/BCS/Analysis-Projects/Module15_MechaCar_Statistical_Analysis")
library(tidyverse)
mpg_table <- read.csv(file = "mechaCar_mpg.csv", check.names = F, stringsAsFactors = F)
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = mpg_table)
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = mpg_table))
sc_table <- read.csv(file = "Suspension_Coil.csv", check.names = F, stringsAsFactors = F)
View(sc_table)
?summarize()
summarize(sc_table.data)
summarize(sc_table)
summarize(sc_table, mean = mean(sc_table))
summarize(sc_table, mean = mean())
summarize(sc_table, mean = mean(PSI))
summarize(sc_table, mean = mean(PSI), median = median(PSI), variance = variance(PSI), SD = sd(PSI))
summarize(sc_table, mean = mean(PSI), median = median(PSI), variance = var(PSI), SD = sd(PSI))
total_summary <- summarize(sc_table, mean = mean(PSI), median = median(PSI), variance = var(PSI), SD = sd(PSI))
View(total_summary)
View(total_summary)
lot_summary <- total_summary %>% group_by(Manufacturing_Lot)
lot_summary <- sc_table %>% group_by(Manufacturing_Lot) %>%  summarize(sc_table, mean = mean(PSI), median = median(PSI), variance = var(PSI), SD = sd(PSI))
lot_summary <- sc_table %>% summarize(sc_table, mean = mean(PSI), median = median(PSI), variance = var(PSI), SD = sd(PSI)) %>% group_by(Manufacturing_Lot)
View(lot_summary)
lot_summary <- sc_table %>% group_by(Manufacturing_Lot)
View(lot_summary)
lot_summary <- sc_table %>% group_by(Manufacturing_Lot) %>% summarize(mean = mean(PSI), median = median(PSI), variance = var(PSI), SD = sd(PSI),.groups = keep"")
View(lot_summary)
lot_summary <- sc_table %>% group_by(Manufacturing_Lot) %>% summarize(mean = mean(PSI), median = median(PSI), variance = var(PSI), SD = sd(PSI),.groups = "keep")
View(lot_summary)
#deliverable 3
t.test(mean(sc_table$PSI),mu=1500)
#deliverable 3
t.test(mean(sc_table$PSI),1500)
?t.test()
#deliverable 3
t.test(sc_table$PSI,1500)
#deliverable 3
t.test(sc_table$PSI, mu = 1500)
View(lot_summary)
View(sc_table)
lot1_table <- subset(sc_table, Manufacturing_Lot == "lot1")
View(lot1_table)
lot1_table <- subset(sc_table, Manufacturing_Lot == "Lot1")
View(lot1_table)
lot2_table <- subset(sc_table, Manufacturing_Lot == "Lot2")
lot3_table <- subset(sc_table, Manufacturing_Lot == "Lot3")
View(lot2_table)
View(lot3_table)
View(lot1_table)
t.test(lot1_table$PSI, mu = 1500)
t.test(lot2_table$PSI, mu = 1500)
t.test(lot3_table$PSI, mu = 1500)
#deliverable 1
library(tidyverse)
mpg_table <- read.csv(file = "mechaCar_mpg.csv", check.names = F, stringsAsFactors = F)
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = mpg_table)
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = mpg_table))
#deliverable 2
sc_table <- read.csv(file = "Suspension_Coil.csv", check.names = F, stringsAsFactors = F)
total_summary <- summarize(sc_table, mean = mean(PSI), median = median(PSI), variance = var(PSI), SD = sd(PSI))
lot_summary <- sc_table %>% group_by(Manufacturing_Lot) %>% summarize(mean = mean(PSI), median = median(PSI), variance = var(PSI), SD = sd(PSI),.groups = "keep")
#deliverable 3
t.test(sc_table$PSI, mu = 1500)
lot1_table <- subset(sc_table, Manufacturing_Lot == "Lot1")
lot2_table <- subset(sc_table, Manufacturing_Lot == "Lot2")
lot3_table <- subset(sc_table, Manufacturing_Lot == "Lot3")
t.test(lot1_table$PSI, mu = 1500)
t.test(lot2_table$PSI, mu = 1500)
t.test(lot3_table$PSI, mu = 1500)
View(lot_summary)
View(total_summary)
